#!/bin/csh

#PBS -N morr-discaq
#PBS -q mod3dev
#PBS -l nodes=nehalem
#PBS -l nodes=8:ppn=8
#PBS -l walltime=72:00:00
#PBS -j oe
#PBS -o /work/MOD3DEV/ratlas/twoway/DISCAQ/disaq-indirect-morrison.log
#PBS -V
#PBS -m n

module add netcdf-4.1.2_ict

cat /home/grc/.ssh/id_rsa.pub >> /home/grc/.ssh/authorized_keys

limit stacksize unlimited
limit memorylocked unlimited
limit vmemoryuse unlimited
limit coredumpsize unlimited
limit

set echo

setenv WRFIO_NCD_LARGE_FILE_SUPPORT 1
source /home/grc/.cshrc

set NPROCS = 64
set MPIRUN = /usr/local/apps/intel/impi/4.1.0.024/intel64/bin/mpirun

# ##### begin user define area #####
set start_year     = 2011
set end_year       = 2011
set met_year       = 11
set start_month    = 7 
set end_month      = 8 
set start_day      = 01 
#set start_day      = 6
set end_day        = 01         # include the end day
set cycle          = 000000
set firstday       = 20110701
i
set    domain      = eus     # (eus, ca, hemi)
set    version     = 34

set    WRF_DIR     = /work/MOD3DEV/ratlas/twoway/WRFV361-feedback    # WRF source code directory
set    CMAQINPUT   = /work/MOD3DEV/ratlas/twoway/DISCAQ/INPUT       # main emission and icbc data path
set    WRFINPUT    = /work/MOD3DEV/ratlas/WRF_FILES
set    ic_path     = $CMAQINPUT/35L_2011
set    bc_path     = $CMAQINPUT/bcon
set    emis_path1  = $CMAQINPUT/4km
set    OCEANpath   = $CMAQINPUT
set    COT         = $CMAQINPUT
set    NML         = $CMAQINPUT/ae6_nml
setenv OMI           $CMAQINPUT/OMI.dat
set    OUTPUT_ROOT = /work/MOD3DEV/ratlas/twoway/DISCAQ             # stores run script and contains output subdirectory

set NUM_LAND_USE_TYPE = 40      # MODIS is 20, USGS is 24, NLCD is 50, NLCD40 is 40
                                # make sure the script contains num_land_cat in the physics section
set cont_from_spinoff_run =  F   # indicates whether a wrf spinoff run prior to the twoway model run
set rad_option =            4   # 3 = CAM, 4 = RRTMG
set radt       =           20

setenv RUN_CMAQ_DRIVER      T   # [F]
setenv DO_SW_CAL            T   # [F]
setenv DO_LW_CAL            F   # [F]
setenv WRF_CMAQ_FREQ        5   # run n wrf step and then 1 cmaq step [1]
setenv CREATE_PHYSICAL_FILE F   # [F]
setenv FILE_TIME_STEP   10000   # in hhmmss format

setenv WRF_CMAQ_INDIRECT    T
setenv INDIRECT_EFFECT      T
setenv INDIRECT_MORRISON    T
setenv WRF_COL_DIM        313 
setenv WRF_ROW_DIM        328
setenv WRF_LAY_DIM         36

setenv CMAQ_COL_DIM       300
setenv CMAQ_ROW_DIM       315
setenv TWOWAY_DELTA_X       6   # distance between the wrf and cmaq lower left corner in the x-direction
setenv TWOWAY_DELTA_Y       6   # distance between the wrf and cmaq lower left corner in the y-direction

setenv WRF_LC_REF_LAT    40.0   # WRF Lambert conformal reference latitude


setenv SD_TIME_SERIES       F   # sub domain time series output option [F]
setenv SD_SCOL            241   # sub domain time series starting column
setenv SD_ECOL            248   # sub domain time series ending column
setenv SD_SROW            160   # sub domain time series starting row
setenv SD_EROW            169   # sub domain time series ending row
setenv SD_CONC_SPCS       "NO2 NO O3 NO3 OH HO2 N2O5 HNO3 HONO PNA H2O2 XO2 XO2N NTR ROOH FORM ALD2 ALDX PAR CO PAN PANX OLE ETH IOLE TOL TOLRO2 OPAN XYL XYLRO2 ISOP  TERP SO2 SULF ETOH ETHA BENZENE BENZRO2 SESQ ASO4J ASO4I ANH4J ANH4I ANO3J ANO3I AALKJ AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J ATRP1J ATRP2J AISO1J AISO2J ASQTJ AORGCJ APOCJ APOCI APNCOMJ APNCOMI AECJ AECI AOTHRJ AOTHRI AFEJ AALJ ASIJ ATIJ ACAJ AMGJ AKJ AMNJ ACORS ASOIL NUMATKN NUMACC NUMCOR SRFATKN SRFACC SRFCOR AH2OJ AH2OI ANAJ ANAI ACLJ ACLI ASEACAT ACLK ASO4K ANH4K ANO3K AH2OK AISO3J AOLGAJ AOLGBJ NH3 MAPAN NTRMB NTRMD" # sub domain time series species subset list

setenv IOAPI_OFFSET_64      Y

# CMAQ model setup
set SPC_LIST = ( NO2 NO O3 NO3 OH HO2 N2O5 HNO3 HONO PNA H2O2 XO2 XO2N NTR ROOH MEO2 C2O3 CXO3 ROR TO2 CRO HCO3 OPO3 CAO2 FORM ALD2 ALDX PAR CO PAN PANX OLE ETH IOLE TOL OPAN CRON CRNO CRN2 CRPX XYL ISOP  TERP SO2 SULF ETOH ETHA BENZENE SESQ ASO4J ASO4I ANH4J ANH4I ANO3J ANO3I AALKJ AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J ATRP1J ATRP2J AISO1J AISO2J ASQTJ AORGCJ APOCJ APOCI APNCOMJ APNCOMI AECJ AECI AOTHRJ AOTHRI AFEJ AALJ ASIJ ATIJ ACAJ AMGJ AKJ AMNJ ACORS ASOIL NUMATKN NUMACC NUMCOR SRFATKN SRFACC SRFCOR AH2OJ AH2OI ANAJ ANAI ACLJ ACLI ASEACAT ACLK ASO4K ANH4K ANO3K AH2OK AISO3J AOLGAJ AOLGBJ NH3)
#set SPC_LIST = ( " NO2 NO O3 NO3 OH HO2 " )

setenv CONC_SPCS "${SPC_LIST}"
#setenv CONC_SPCS "${SPC_LIST}" #If undefined, write out all species to CONC file - get_envlist has 256 character maximum

setenv AVG_CONC_SPCS "ALL"
#setenv AVG_CONC_SPCS "ALD2 ALDX CO ETH ETHA FORM H2O2 HNO3 HONO OH HO2 IOLE ISOP NH3 NO NO2 NO3 N2O5 PAN PANX PNA CRON CRNO CRN2 CRPX OPAN NTR O3 OLE PAR  SO2 SULF TERP TOL ETOH XYL AFEJ AALJ ASIJ ATIJ ACAJ AMGJ AKJ AMNJ ASEACAT ASOIL ACORS ACLI ACLJ ACLK AECI AECJ  ANAJ ANAI ASO4I ASO4J ASO4K ANO3I ANO3J ANO3K ANH4I ANH4J ANH4K AOTHRI AOTHRJ AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J AISO1J AISO2J AISO3J ATRP1J ATRP2J ASQTJ AALKJ AORGCJ AOLGBJ AOLGAJ APOCI APOCJ APNCOMI APNCOMJ"

setenv ACONC_BLEV_ELEV " 1 1"  # layer range for integral average conc

setenv PA_BCOL_ECOL  "30 100"  # process analysis (and irr) column ranges
setenv PA_BROW_EROW   "10 50"  # process analysis (and irr) row ranges
setenv PA_BLEV_ELEV    "1  5"  # process analysis (and irr) layer ranges

setenv CTM_MAXSYNC        300  # max sync time step (sec) [720]
setenv CTM_MINSYNC         50  # min sync time step (sec) [60]
setenv SIGMA_SYNC_TOP     0.7  # top sigma level thru which sync step determined [0.7]
setenv REP_LAYER_MIN       -1  # Minimum layer for reporting plume rise info [-1]

setenv PROMPTFLAG           F  # turn off I/O-API PROMPT*FILE interactive mode
setenv CTM_CKSUM            Y  # cksum report [Y]
setenv KZMIN                Y  # use Min Kz option in edyintb [Y], otherwise revert to Kz0UT
setenv IOAPI_LOG_WRITE      F  # turn off excess WRITE3 logging [T]
setenv FL_ERR_STOP          F  # stop on inconsistent input file [T]

setenv CTM_ABFLUX           N   # Pleim's ammonia bi-directional flux for inline deposition velocities [N]
setenv CTM_MOSAIC           N   # [N]
setenv CTM_BIOGEMIS         Y   # use in-line biogenic emissions [N]
setenv CTM_PT3DEMIS         Y   # use in-line plume rise emissions [N]
setenv CTM_SFC_HONO         Y   # Sarwar`s HONO interaction with leaf and building surfaces [Y]
setenv CTM_FST              N   # Mosaic method to get land-use specific stomatal flux [N]
setenv PX_VERSION           Y   # MCIP is PX version? [Y]
setenv BIOSW_YN             N   # Using a frost date switch file [Y]
setenv SUMMER_YN            Y   # Use summer normalized emissions? [Y]
setenv ACONC_END_TIME       N   # Override default beginning time timestamp for ACONC [N]

# diagnostic flags
setenv CLD_DIAG             Y  # cloud diagnostic file [N]
setenv CTM_AERDIAG          Y  # aerosol diagnostic file [N]
setenv CTM_SSEMDIAG         Y  # sea-salt emissions diagnostic file [N]
setenv CTM_LTNG_NO          N  # turn on lightning NOx [N]
setenv CTM_WVEL             Y  # save derived vertical velocity component to conc file [N]
setenv CTM_ILDEPV           Y  # inline deposition velocities [Y]
setenv CTM_DEPV_FILE        Y  # diagnostic file for deposition velocities [N]
setenv B3GTS_DIAG           N  # beis mass emissions diagnostic file [N]
setenv PT3DDIAG             N  # optional 3d point source emissions diagnostic file [N]
setenv PT3DFRAC             N  # optional layer fractions diagnostic (play) file(s) [N]
setenv CTM_WB_DUST          N  # windblown dust [Y]

setenv CTM_ERODE_AGLAND     Y  # use agricultural activity for windblown dust [Y]
                               # - env var ignored if CTM_WB_DUST is N

setenv CTM_DUSTEM_DIAG      N  # windblown dust emissions diagnostic file [N]
                               # - env var ignored if CTM_WB_DUST is N
setenv LTNGDIAG             N  # diagnostic file [N]
setenv CTM_PHOTDIAG         N  # photolysis rate diagnostic [N]

# MPI tune up
setenv MPI_SM_POOL          16000  # increase shared memory pool in case many MPI_SEND headers
setenv MP_EAGER_LIMIT       65536  # set MPI message passing buffer to max
setenv MP_SINGLE_THREAD       yes  # tell mpi threading is not done
setenv MP_STDOUTMODE      ordered  # order stnd out msgs
setenv MP_LABELIO yes
setenv MP_SHARED_MEMORY       yes  # avoid using interconnect switch if on same node
setenv MP_ADAPTER_USE      shared  # additional tuning
setenv MP_CPU_USE        multiple  # additional tuning
setenv MP_CSS_INTERRUPT       yes  # additional tuning

# ##### end user define area #####

if (($DO_SW_CAL == T) || ($DO_LW_CAL == T)) then
  setenv CMAQ_WRF_FEEDBACK    T   # [F]
else
  setenv CMAQ_WRF_FEEDBACK    F   # [F]
endif

if ($rad_option == 3) then
   set rad_scheme = _cam_$radt
else if ($rad_option == 4) then
   set rad_scheme = _rrtmg_$radt
else
   set rad_scheme =
endif

if ($CMAQ_WRF_FEEDBACK == 'T') then
   if ($DO_LW_CAL == T) then
      set feedback = slf
   else
      set feedback = sf
   endif
else
   set feedback = nf
endif

set call_ratio = "${WRF_CMAQ_FREQ}_1"

set output_direct_name = output_${domain}_${feedback}${rad_scheme}_${call_ratio}_discaq_indirect_morr_withdrop

# ----- CMAQ -----

 set EXEC      = CCTM

 set year      = $start_year
 @ pre_year    = $year - 1
 @ cur_year    = $year
 @ yr          = $year
 @ start_hour  = $cycle / 10000
 @ end_hour    = ($start_hour + 23) % 24

# loop through simulation period
@ cur_year = $cur_year - 1
while ($cur_year < $end_year)

  @ cur_year++

  if (($cur_year % 4) != 0) then
     set leap_year_cur_year = 0
  else if (($cur_year % 400) == 0) then
     set leap_year_cur_year = 1     # leap year, nday = 29
  else if (($cur_year % 100) == 0) then
     set leap_year_cur_year = 0
  else
     set leap_year_cur_year = 1     # leap year, nday = 29
  endif

  if ($leap_year_cur_year) then
     set numday_cur_year = ( 31 29 31 30 31 30 31 31 30 31 30 31 )
     set leap_year_pre_year = 0
  else
     set numday_cur_year = ( 31 28 31 30 31 30 31 31 30 31 30 31 )
     if (($pre_year % 4) != 0) then
        set leap_year_pre_year = 0
     else if (($pre_year % 400) == 0) then
        set leap_year_pre_year = 1
     else if (($pre_year % 100) == 0) then
        set leap_year_pre_year = 0
     else
        set leap_year_pre_year = 1
     endif
  endif

# setup the current and previous day in julian format
  if ($cur_year == $start_year) then
     @ cur_day_j = 0
     @ temp_month = 1
     while ($temp_month < $start_month)
       @ cur_day_j = $cur_day_j + $numday_cur_year[$temp_month]
       @ temp_month++
     end
     @ cur_day_j = $cur_day_j + $start_day
     @ pre_day_j = $cur_day_j - 1
  else
     @ cur_day_j = 1
  endif

  if ($cur_day_j == 1) then
     if ($leap_year_pre_year) then
        set pre_day_j = 366
     else
        set pre_day_j = 365
     endif
  endif

  if ($cur_year == $start_year) then
     @ cur_month = $start_month
  else
     @ cur_month = 1
  endif

  if ($cur_year == $end_year) then
     @ cur_end_month = $end_month
  else
     @ cur_end_month = 12
  endif

  @ cur_month = $cur_month - 1
  while ($cur_month < $cur_end_month)
    @ cur_month++

    @ cur_day = 0
    @ cur_month_end_day = $numday_cur_year[$cur_month]
    if (($cur_year == $start_year) && ($cur_month == $start_month)) then
       @ cur_day = $start_day - 1
    endif

    if (($cur_year == $end_year) && ($cur_month == $cur_end_month)) then
       @ cur_month_end_day = $end_day
    endif

    while ($cur_day < $cur_month_end_day)

      @ cur_day++
      set loc_pre_year = $cur_year

      if ($cur_day == 1) then
         @ pre_month = $cur_month - 1
         if ($pre_month == 0) then
            set pre_month = 12
            @ loc_pre_year = $cur_year - 1
         endif
         set yest = $numday_cur_year[$pre_month]
         set yesterday = `printf "%d%2.2d%2.2d\n" $loc_pre_year $pre_month $yest`
      else
         @ yest = $cur_day - 1
         set yesterday = `printf "%d%2.2d%2.2d\n" $loc_pre_year $cur_month $yest`
      endif

      set today       = `printf "%d%2.2d%2.2d\n" $cur_year $cur_month $cur_day` # beginning date, yyyymmdd
      set today_j     = `printf "%d%3.3d\n" $cur_year $cur_day_j`               # beginning Julian date, yyyyxxx
      set yesterday_j = `printf "%d%3.3d\n" $loc_pre_year $pre_day_j`
      set MONTH       = `printf "%2.2d\n" $cur_month` # mm
      set DAY         = `printf "%2.2d\n" $cur_day` # dd

      if ($today == $firstday) then
         if ( ! -d $OUTPUT_ROOT/$output_direct_name ) then
            mkdir $OUTPUT_ROOT/$output_direct_name
            if ( $status != 0 ) then
              echo "Failed to make work directory, $OUTPUT_ROOT/$output_direct_name"
              exit 1
            endif
         endif

         setenv RSTFLAG .false.
         setenv WRF_RSTFLAG .false.
         setenv pxlsm_smois_init 1
      else
         if ($cont_from_spinoff_run == T) then
            setenv RSTFLAG .false.
            set cont_from_spinoff_run = F
         else
            setenv RSTFLAG .true.
         endif
         setenv WRF_RSTFLAG .true.
         setenv pxlsm_smois_init 0
      endif

      mkdir $OUTPUT_ROOT/$output_direct_name/$today

      set STDATE   = $today_j      # beginning date in julian format
      set STTIME   = $cycle        # beginning GMT time (HHMMSS)
      set NSTEPS   = 240000        # time duration (HHMMSS) for this run
      set TSTEP    = 010000        # output time step interval (HHMMSS)

      set APPL     = ${today}

#> horizontal grid defn
      setenv GRIDDESC $CMAQINPUT/griddesc.txt
      setenv GRID_NAME 04DAQ_300X315

#> remove existing output files?
      set DISP = delete
#     set DISP = update
#     set DISP = keep

      set OUTDIR = $OUTPUT_ROOT/$output_direct_name   # output files and directories

# this is for inline biogenic emissions *.q
      set YEAR = $year
      set MONTH = `printf "%2.2d\n" $cur_month`
      set day = $cur_day
    
      set EMISDATE = `printf "%4d%2.2d%2.2d\n" ${YEAR} $cur_month $cur_day`

# inline biogenic emissions processing
      set biogon = 1
      if ( $?CTM_BIOGEMIS ) then     # $CTM_BIOGEMIS is defined
         if ( $CTM_BIOGEMIS == 'N' || $CTM_BIOGEMIS == 'F' ) then
            set biogon = 0
         endif
      endif

      if ( $biogon ) then
         set    GSPROpath   = ${CMAQINPUT}
         setenv GSPRO         $GSPROpath/gspro_cb05soa_notoxics_cmaq_poc_09nov2007.txt
         setenv B3GRD         $CMAQINPUT/b3grd.beis314.04DAQ_300X315.ncf
         setenv BIOG_SPRO     B10C5 # speciation profile to use for biogenics
         if (($BIOSW_YN == Y) || ($BIOSW_YN == T)) then
            setenv BIOSEASON $CMAQINPUT/bioseason_NARR_US_459x299_${cur_year}.ioapi # bioseason file
         endif
#        set APPL = ${YEAR}${MONTH}${start_day}
         if ($today == $firstday) then
           setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${firstday}   # Biogenic NO soil input file
         else
            setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${yesterday}  # Biogenic NO soil input file
         endif
         setenv INITIAL_RUN   N
         if (! -f $SOILINP) then
            setenv INITIAL_RUN   Y     # non-existent or not using SOILINP [N|F]; default uses SOILINP
         endif

         if ( $B3GTS_DIAG == 'Y' || $B3GTS_DIAG == 'T' ) then
            setenv B3GTS_S $OUTDIR/$EXEC"_B3GTS_S".${APPL}
         endif
         setenv SOILOUT $OUTDIR/$EXEC"_SOILOUT".${APPL}  # Biogenic NO soil output file
      endif

      set CONCfile  = $EXEC"_CONC".${APPL}               # CTM_CONC_1
      set ACONCfile = $EXEC"_ACONC".${APPL}              # CTM_ACONC_1
      set VCONCfile = $EXEC"_VCONC".${APPL}              # CTM_VCONC
      set CGRIDfile = $EXEC"_CGRID".${APPL}              # CTM_CGRID_1
      set DD1file   = $EXEC"_DRYDEP".${APPL}             # CTM_DRY_DEP_1
      set DV1file   = $EXEC"_DEPV".${APPL}               # CTM_DEPV_DIAG
      set PT1file   = $EXEC"_PT3D".${APPL}               # CTM_PT3D_DIAG
      set BIO1file  = $EXEC"_"B3GTS_S.${APPL}            # B3GTS_S
      set SOIL1file = $EXEC"_"SOILOUT.${APPL}            # SOILOUT
      set WD1file   = $EXEC"_WETDEP1".${APPL}            # CTM_WET_DEP_1
      set WD2file   = $EXEC"_WETDEP2".${APPL}            # CTM_WET_DEP_2
      set AV1file   = $EXEC"_AEROVIS".${APPL}            # CTM_VIS_1
      set AD1file   = $EXEC"_AERODIAM".${APPL}           # CTM_DIAM_1
      set RJ1file   = $EXEC"_"PHOTDIAG1.${APPL}          # CTM_RJ_2
      set RJ2file   = $EXEC"_"PHOTDIAG2.${APPL}          # CTM_RJ_2
      set SSEfile   = $EXEC"_SSEMIS".$APPL               # CTM_SSEMIS_1
      set DSEfile   = $EXEC"_DUSTEMIS".${APPL}           # CTM_DUST_EMIS_1
      set PA1file   = $EXEC"_PA_1".${APPL}               # CTM_IPR_1
      set PA2file   = $EXEC"_PA_2".${APPL}               # CTM_IPR_2
      set PA3file   = $EXEC"_PA_3".${APPL}               # CTM_IPR_3
      set IRR1file  = $EXEC"_IRR_1".${APPL}              # CTM_IRR_1
      set IRR2file  = $EXEC"_IRR_2".${APPL}              # CTM_IRR_2
      set IRR3file  = $EXEC"_IRR_3".${APPL}              # CTM_IRR_3
      set PG1file   = $EXEC"_PING".${APPL}               # CTM_PING_1
      set PGDfile   = $EXEC"_PING_ADIAM".${APPL}         # CTM_PING_DIAM_1
      set PGWfile   = $EXEC"_PING_DDEP".${APPL}          # CTM_PING_DDEP_1

      set SD_TSfile  = $EXEC"_SD_TIME_SERIES".${APPL}    # CTM_SD_TS

      set test = `ls CTM_LOG_???.${APPL}`
      if ( "$test" != "" ) then
         if ( $DISP == 'delete' ) then
            echo " ancillary log files being deleted"
            foreach file ( $test )
               echo " deleting $file"
               rm $file
            end
         else
            echo "*** Logs exist - run ABORTED ***"
            exit 1
         endif
      endif

      if ( $?CTM_ERODE_AGLAND ) then   # $CTM_ERODE_AGLAND is defined
         if ( $CTM_ERODE_AGLAND == 'Y' || $CTM_ERODE_AGLAND == 'T' ) then
            set aglandon = 1
         else
            set aglandon = 0
         endif
      else   # $CTM_ERODE_AGLAND is not defined => $CTM_ERODE_AGLAND == 'N'
         set aglandon = 0
      endif

      if ( $aglandon ) then
         setenv CROPMAP01 $COT/${domain}/BeginPlanting_12km
         setenv CROPMAP04 $COT/${domain}/EndPlanting_12km
         setenv CROPMAP08 $COT/${domain}/EndHarvesting_12km
      endif

      setenv DUST_LU_1 $COT/beld3_12US1_459X299_output_a.ncf
      setenv DUST_LU_2 $COT/beld3_12US1_459X299_output_tot.ncf

##> lightning NOx
      if ( $?CTM_LTNG_NO ) then   # $CTM_LTNG_NO is defined
         if ( $CTM_LTNG_NO == 'Y' || $CTM_LTNG_NO == 'T' ) then
            set ltngon = 1
         else
            set ltngon = 0
         endif
      else   # $CTM_LTNG_NO is not defined => $CTM_LTNG_NO == 'N
         set ltngon = 0
      endif

      if ( $ltngon ) then
#> file (offline)
         set    IN_LTpath  = $CMAQINPUT/35L_2011
#         setenv LTNGNO       $IN_LTpath/nox12km.35L.$EMISDATE
#> inline
        setenv LTNGNO "InLine" 
        setenv LTNGPARAM Y #> use lightning parameter file? [ Y|T ]
#> point to lightning parameter file (ignored if LTNGPARAM is [ N|F]
        setenv LTNGPARM_FILE $IN_LTpath/LTNG_RATIO.2011.$MONTH.12US1_459X299.ioapi
        setenv LTNGOUT $OUTDIR/$EXEC.LTNGDIAG.${APPL}
#        unsetenv LTNGPARAM
#        if (! -e $LTNGNO) aget -a $IN_LTpath /asm2/MOD3EVAL/LNOx/emisLNOx/2004af/36US1/pnox3d.t$EMISDATE
      endif

      setenv CSQY_DATA $NML/CSQY_DATA_cb05tucl_ae6_aq
      if (! (-e $CSQY_DATA ) ) then
         echo " $CSQY_DATA  not found "
         exit 1
      endif

      set OCEANfile = DAQ4_300X315_surf.ncf 

      set pt3don = 1
      if ( $?CTM_PT3DEMIS ) then   # $CTM_PT3DEMIS is defined
         if ( $CTM_PT3DEMIS == 'N' || $CTM_PT3DEMIS == 'F' ) then
            set pt3don = 0
         endif
      endif

      if ( $pt3don ) then
         set IN_PTpath = $emis_path1
         set EMISpath  = $emis_path1

         set STKCASE = 04DAQ_300X315_F72_2011ec 
         set CASE = 04DAQ_300X315_cmaq_cb05_soa_F72_2011ec 

         set EMISfile  = emis_mole_all_${today}_${CASE}.ncf

         setenv NPTGRPS 7

         setenv STK_GRPS_01 ${emis_path1}/stack_groups_ptnonipm_${STKCASE}.ncf
         setenv STK_GRPS_02 ${emis_path1}/stack_groups_ptegu_${STKCASE}.ncf
         setenv STK_GRPS_03 ${emis_path1}/stack_groups_ptegu_pk_${STKCASE}.ncf
         setenv STK_GRPS_04 ${emis_path1}/stack_groups_othpt_${STKCASE}.ncf
         setenv STK_GRPS_05 ${emis_path1}/stack_groups_c3marine_${STKCASE}.ncf
         setenv STK_GRPS_06 ${emis_path1}/stack_groups_ptfire_${today}_${STKCASE}.ncf
         setenv STK_GRPS_07 ${emis_path1}/stack_groups_pt_oilgas_${STKCASE}.ncf


         setenv STK_EMIS_01 $IN_PTpath/inln_mole_ptnonipm_${today}_${CASE}.ncf
         setenv STK_EMIS_02 $IN_PTpath/inln_mole_ptegu_${today}_${CASE}.ncf
         setenv STK_EMIS_03 $IN_PTpath/inln_mole_ptegu_pk_${today}_${CASE}.ncf
         setenv STK_EMIS_04 $IN_PTpath/inln_mole_othpt_${today}_${CASE}.ncf
         setenv STK_EMIS_05 $IN_PTpath/inln_mole_c3marine_${today}_${CASE}.ncf
         setenv STK_EMIS_06 $IN_PTpath/inln_mole_ptfire_${today}_${CASE}.ncf
         setenv STK_EMIS_07 $IN_PTpath/inln_mole_pt_oilgas_${today}_${CASE}.ncf

         unset echo
         if ( $REP_LAYER_MIN != "0" ) then
            set DATE = $EMISDATE
            @ count = 0
            while ( $count <= $NPROCS )
               if ( $count <= 9 ) then
                  set sub = 0${count}
               else
                  set sub = ${count}
               endif
               @ grp = 1
               while ( $grp <= $NPTGRPS )
                  set file = $OUTDIR/rptlay_0${grp}.${DATE}.${APPL}_${sub}
                  setenv REPRTLAY_0${grp}${sub} $file
                  if ( $DISP == 'delete' ) /bin/rm -f $file
                  @ grp ++
               end
               @ count ++
            end
         endif
         set echo

         setenv LAYP_STDATE $STDATE
         setenv LAYP_STTIME $STTIME
         setenv LAYP_NSTEPS $NSTEPS
      else
         set EMISpath  = /work/uiy/CA
         set EMISfile  = aqm.t06z.$today.emis+fireCA.ncf
      endif

      if ($today == $firstday) then
#      if ($today == 20051222) then
       set GC_ICpath  = $CMAQINPUT/icon 
       set icon_file = ICON_V5n_CMAQ-DISCOVERAQ_2011172
       set GC_ICfile = $icon_file
      else
         set GC_ICpath = $OUTPUT_ROOT/$output_direct_name
         set GC_ICfile = CCTM_CGRID.$yesterday
      endif

      set GC_BCpath = $bc_path 
      set GC_BCfile = BCON_V5n_CMAQ-DISCOVERAQ_${cur_year}${MONTH}${DAY}_4km_NewEmis_PURBfix.ncf
#      set GC_BCfile = BCON_geos2cmaq_CB05_AE6_35L_12US1_${cur_year}${MONTH}${DAY}.ncf
#      set GC_BCfile = bc_12km_MACC2_${cur_year}${MONTH}.ioapi

      set METpath   = $OUTPUT_ROOT/$output_direct_name
      set TR_DVpath = $METpath
#     set TR_DVfile = $MC2file

#> 7-level photolysis data w/ file header

      set AE_ICpath = $GC_ICpath
      set NR_ICpath = $GC_ICpath
      set TR_ICpath = $GC_ICpath
      set AE_ICfile = $GC_ICfile
      set NR_ICfile = $GC_ICfile
      set TR_ICfile = $GC_ICfile

      set AE_BCpath = $GC_BCpath
      set NR_BCpath = $GC_BCpath
      set TR_BCpath = $GC_BCpath
      set AE_BCfile = $GC_BCfile
      set NR_BCfile = $GC_BCfile
      set TR_BCfile = $GC_BCfile

      set GD2file = GRID_DOT_2D
      set GC2file = GRID_CRO_2D
      set MC2file = MET_CRO_2D
      set MD3file = MET_DOT_3D
      set MC3file = MET_CRO_3D

      source $CMAQINPUT/in_outb.q
      if ( $status ) exit 1

#> for the run control ...

      setenv CTM_STDATE      $STDATE
      setenv CTM_STTIME      $STTIME
      setenv CTM_RUNLEN      $NSTEPS
      setenv CTM_TSTEP       $TSTEP
      setenv CTM_PROGNAME    $EXEC

# ----- END CMAQ -----

      cd $OUTPUT_ROOT/$output_direct_name

#> mechanism name list files
      ln -s $NML/GC_cb05tucl_ae6_aq.nml    gc_matrix_nml
      ln -s $NML/AE_cb05tucl_ae6_aq.nml    ae_matrix_nml
      ln -s $NML/NR_cb05tucl_ae6_aq.nml    nr_matrix_nml
      ln -s $NML/Species_Table_TR_0.nml    tr_matrix_nml

#-----------------------------------------------------------------------
# Build WRF namelist.
#-----------------------------------------------------------------------

      if ( -f namelist.input ) rm -f namelist.input

      cat << End_Of_Namelist  > namelist.input

 &time_control
 run_days                            = 1,
 run_hours                           = 0,
 run_minutes                         = 0,
 run_seconds                         = 0,
 start_year                          = $year
 start_month                         = $cur_month
 start_day                           = $cur_day
 start_hour                          = $start_hour
 start_minute                        = 00,
 start_second                        = 00,
 end_year                            = $year
 end_month                           = $cur_month
 end_day                             = $end_day
 end_hour                            = $end_hour
 end_minute                          = 00,
 end_second                          = 00,
 interval_seconds                    = 10800,
 input_from_file                     = .true.,
 history_interval                    = 60,
 frames_per_outfile                  = 133,
 restart                             = $WRF_RSTFLAG,
 restart_interval                    = 1440,
 io_form_history                     = 2,
 io_form_restart                     = 2,
 io_form_input                       = 2,
 io_form_boundary                    = 2,
 debug_level                         = 0,
 io_form_auxinput4                   = 2,
 auxinput1_inname                    = "metoa_em.d<domain>.<date>",
 auxinput4_inname                    = "wrflowinp_d<domain>",
 auxinput4_interval                  = 180,
 auxinput4_end_h                     = 9999,
/

 &domains
 time_step                           = 20,
 time_step_fract_num                 = 0,
 time_step_fract_den                 = 1,
 max_dom                             = 1,
 s_we				     = 1,
 e_we                                = $WRF_COL_DIM
 s_sn				     = 1,
 e_sn                                = $WRF_ROW_DIM
 s_vert				     = 1,
 e_vert                              = $WRF_LAY_DIM
 num_metgrid_levels                  = 40,
 p_top_requested                     = 5000,
 eta_levels                          = 1.000, 0.9975, 0.995, 0.990, 0.985, 0.980,
                                       0.970, 0.960, 0.950, 0.940, 0.930,
                                       0.920, 0.910, 0.900, 0.880, 0.860,
                                       0.840, 0.820, 0.800, 0.770, 0.740,
                                       0.700, 0.650, 0.600, 0.550, 0.500,
                                       0.450, 0.400, 0.350, 0.300, 0.250,
                                       0.200, 0.150, 0.100, 0.050, 0.000
 dx                                  = 4000,
 dy                                  = 4000,
 grid_id                             = 1,
 parent_id                           = 0,
 i_parent_start                      = 306,
 j_parent_start                      = 96,
 parent_grid_ratio                   = 3,
 parent_time_step_ratio              = 1,
 feedback                            = 0,
 smooth_option                       = 0,
 /

 &physics
 mp_physics                          = 10,
 mp_zero_out                         = 2,
 ra_lw_physics                       = $rad_option
 ra_sw_physics                       = $rad_option
 radt                                = $radt,
 sf_sfclay_physics                   = 7,
 sf_surface_physics                  = 7,
 bl_pbl_physics                      = 7,
 bldt                                = 0,
 scalar_pblmix                       = 1,
 cu_physics                          = 0,
 cudt                                = 0,
 isfflx                              = 1,
 ifsnow                              = 1,
 icloud                              = 1,
 surface_input_source                = 1,
 num_soil_layers                     = 2,
 sst_update                          = 1,
 sst_skin                            = 0,
 pxlsm_smois_init                    = $pxlsm_smois_init
 slope_rad                           = 1,
 topo_shading                        = 1,
 shadlen                             = 25000.,
 num_land_cat                        = $NUM_LAND_USE_TYPE
 cam_abs_dim1			     = 1,
 cam_abs_dim2			     = 1
/

 &fdda
 grid_fdda                           = 1,
 grid_sfdda                          = 1,
 pxlsm_soil_nudge                    = 1,
 sgfdda_inname                       = "wrfsfdda_d<domain>"
 sgfdda_end_h                          = 99999,
 sgfdda_interval_m                   = 180,
 sgfdda_interval                     = 10800,
 gfdda_end_h                         = 99999,
 gfdda_interval_m                    = 180,
 gfdda_inname                        = "wrffdda_d<domain>"
 fgdt                                = 0,
 if_no_pbl_nudging_uv                = 1,
 if_no_pbl_nudging_t                 = 1,
 if_no_pbl_nudging_q                 = 1,
 if_zfac_uv                          = 0,
  k_zfac_uv                          = 0,
 if_zfac_t                           = 0,
  k_zfac_t                           = 0,
 if_zfac_q                           = 0,
  k_zfac_q                           = 0,
 guv                                 = 0.0001,
 gt                                  = 0.0001,
 gq                                  = 0.00001,
 guv_sfc                             = 0.0000,
 gt_sfc                              = 0.0000,
 gq_sfc                              = 0.0000,
 if_ramping                          = 1,
 dtramp_min                          = 60.0,
 rinblw                              = 250.0,
 /

 &dynamics
 w_damping                           = 1,
 diff_opt                            = 0,
 km_opt                              = 4,
 diff_6th_opt                        = 2,
 diff_6th_factor                     = 0.12,
 base_temp                           = 290.,
 damp_opt                            = 3,
 zdamp                               = 5000.,
 dampcoef                            = 0.20,
 khdif                               = 0,
 kvdif                               = 0,
 non_hydrostatic                     = .true.,
 moist_adv_opt                       = 2,
 tke_adv_opt                         = 2,
 scalar_adv_opt                            = 2,
 /

 &bdy_control
 spec_bdy_width                      = 5,
 spec_zone                           = 1,
 relax_zone                          = 4,
 specified                           = .true.,
 nested                              = .false.,
 /

 &grib2
 /

 &namelist_quilt
 nio_tasks_per_group = 0,
 nio_groups = 1,
 /

End_Of_Namelist

      ln -s $WRFINPUT/wrfbdy_d01 wrfbdy_d01
      ln -s $WRFINPUT/wrffdda_d01 wrffdda_d01
      ln -s $WRFINPUT/wrfsfdda_d01 wrfsfdda_d01
      ln -s $WRFINPUT/wrflowinp_d01 wrflowinp_d01

      if (${WRF_RSTFLAG} == .false.) then
        ln -s $WRFINPUT/wrfinput_d01 wrfinput_d01
      endif

#-----------------------------------------------------------------------
# Set up and run WRF-EM executable.
#-----------------------------------------------------------------------

      if ( -f wrf.exe       ) rm -f wrf.exe

      if ( -f ETAMPNEW_DATA ) rm -f ETAMPNEW_DATA
      if ( -f GENPARM.TBL   ) rm -f GENPARM.TBL
      if ( -f landFilenames ) rm -f landFilenames
      if ( -f LANDUSE.TBL   ) rm -f LANDUSE.TBL
      if ( -f RRTM_DATA     ) rm -f RRTM_DATA
      if ( -f SOILPARM.TBL  ) rm -f SOILPARM.TBL
      if ( -f tr49t67       ) rm -f tr49t67
      if ( -f tr49t85       ) rm -f tr49t85
      if ( -f tr67t85       ) rm -f tr67t85
      if ( -f VEGPARM.TBL   ) rm -f VEGPARM.TBL

      ln -s $WRF_DIR/main/wrf.exe	wrf.exe
      ln -s $WRF_DIR/run/ETAMPNEW_DATA ETAMPNEW_DATA
      ln -s $WRF_DIR/run/GENPARM.TBL   GENPARM.TBL
      ln -s $WRF_DIR/run/landFilenames landFilenames
      ln -s $WRF_DIR/run/LANDUSE.TBL   LANDUSE.TBL
      ln -s $WRF_DIR/run/RRTM_DATA     RRTM_DATA
      ln -s $WRF_DIR/run/RRTMG_SW_DATA RRTMG_SW_DATA
      ln -s $WRF_DIR/run/RRTMG_LW_DATA RRTMG_LW_DATA
      ln -s $WRF_DIR/run/SOILPARM.TBL  SOILPARM.TBL
      ln -s $WRF_DIR/run/tr49t67       tr49t67
      ln -s $WRF_DIR/run/tr49t85       tr49t85
      ln -s $WRF_DIR/run/tr67t85       tr67t85
      ln -s $WRF_DIR/run/VEGPARM.TBL   VEGPARM.TBL

echo ' ==d=='
ls -al $MPIRUN

      date '+Started wrf.exe at %m/%d/%y %H:%M:%S'
#     time $MPIRUN -r ssh -np $NPROCS wrf.exe
#      time /usr/local/intel/impi/3.2.2.006/bin64/mpirun -r ssh -np $NPROCS /work/MOD3EVAL/wtt/DISCOVER_AQ/bin/wrf_disaq_v502.exe
      time mpirun -r ssh -np $NPROCS wrf.exe >>&!  log.4km.PURBfix
     
      date '+Completed WRF at %m/%d/%y %H:%M:%S%n'

      mv rsl.* $OUTPUT_ROOT/$output_direct_name/$today

      if ($CREATE_PHYSICAL_FILE == T) then
         mv MET* $OUTPUT_ROOT/$output_direct_name/$today
         mv GRI* $OUTPUT_ROOT/$output_direct_name/$today
      endif

      if ( $biogon ) then
         mv $SOILOUT $OUTDIR/$EXEC"_SOILINP".${APPL}
         setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${APPL}  # Biogenic NO soil input file
         setenv INITIAL_RUN N
      endif

      @ cur_day_j++
      @ pre_day_j++
      if ($pre_day_j > $cur_day_j) then
         @ pre_day_j = $cur_day_j - 1
      endif
    end
  end
  @ pre_year++
end
